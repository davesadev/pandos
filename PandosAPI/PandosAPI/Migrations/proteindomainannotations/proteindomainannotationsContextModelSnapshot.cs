// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandosAPI.Models;

#nullable disable

namespace PandosAPI.Migrations.proteindomainannotations
{
    [DbContext(typeof(proteindomainannotationsContext))]
    partial class proteindomainannotationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PandosAPI.Models.Pdb", b =>
                {
                    b.Property<string>("PdbId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pdb_id");

                    b.Property<int>("UniprotId")
                        .HasColumnType("int")
                        .HasColumnName("uniprot_id");

                    b.HasKey("PdbId");

                    b.HasIndex("UniprotId");

                    b.ToTable("pdb");
                });

            modelBuilder.Entity("PandosAPI.Models.PdbChain", b =>
                {
                    b.Property<int>("PdbChainId")
                        .HasColumnType("int")
                        .HasColumnName("pdb_chain_id");

                    b.Property<string>("Chain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("chain");

                    b.Property<string>("PdbId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pdb_id");

                    b.Property<byte[]>("PdbSequence")
                        .HasMaxLength(200)
                        .HasColumnType("varbinary(200)")
                        .HasColumnName("pdb_sequence");

                    b.HasKey("PdbChainId");

                    b.HasIndex("PdbId");

                    b.ToTable("pdb_chain");
                });

            modelBuilder.Entity("PandosAPI.Models.PdbChainDatum", b =>
                {
                    b.Property<int>("PdbChainDataId")
                        .HasColumnType("int")
                        .HasColumnName("pdb_chain_data_id");

                    b.Property<string>("Cytoplasmic")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cytoplasmic");

                    b.Property<string>("HeadDomain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("head_domain");

                    b.Property<string>("HingeDomain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("hinge_domain");

                    b.Property<string>("NeckDomain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("neck_domain");

                    b.Property<int?>("PdbChainId")
                        .HasColumnType("int")
                        .HasColumnName("pdb_chain_id");

                    b.Property<string>("StalkDomain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stalk_domain");

                    b.Property<string>("Transmembrane")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transmembrane");

                    b.HasKey("PdbChainDataId");

                    b.HasIndex("PdbChainId");

                    b.ToTable("pdb_chain_data");
                });

            modelBuilder.Entity("PandosAPI.Models.Uniprot", b =>
                {
                    b.Property<int>("UniprotId")
                        .HasColumnType("int")
                        .HasColumnName("uniprot_id");

                    b.Property<int?>("AccessionNumber")
                        .HasColumnType("int")
                        .HasColumnName("accession_number");

                    b.Property<string>("EntryStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("entry_status");

                    b.Property<string>("Sequence")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sequence");

                    b.HasKey("UniprotId");

                    b.ToTable("uniprot");
                });

            modelBuilder.Entity("PandosAPI.Models.Pdb", b =>
                {
                    b.HasOne("PandosAPI.Models.Uniprot", "Uniprot")
                        .WithMany("Pdbs")
                        .HasForeignKey("UniprotId")
                        .IsRequired()
                        .HasConstraintName("FK_pdb_uniprot");

                    b.Navigation("Uniprot");
                });

            modelBuilder.Entity("PandosAPI.Models.PdbChain", b =>
                {
                    b.HasOne("PandosAPI.Models.Pdb", "Pdb")
                        .WithMany("PdbChains")
                        .HasForeignKey("PdbId")
                        .HasConstraintName("FK_pdb_chain_pdb");

                    b.Navigation("Pdb");
                });

            modelBuilder.Entity("PandosAPI.Models.PdbChainDatum", b =>
                {
                    b.HasOne("PandosAPI.Models.PdbChain", "PdbChain")
                        .WithMany("PdbChainData")
                        .HasForeignKey("PdbChainId")
                        .HasConstraintName("FK_pdb_chain_data_pdb_chain");

                    b.Navigation("PdbChain");
                });

            modelBuilder.Entity("PandosAPI.Models.Pdb", b =>
                {
                    b.Navigation("PdbChains");
                });

            modelBuilder.Entity("PandosAPI.Models.PdbChain", b =>
                {
                    b.Navigation("PdbChainData");
                });

            modelBuilder.Entity("PandosAPI.Models.Uniprot", b =>
                {
                    b.Navigation("Pdbs");
                });
#pragma warning restore 612, 618
        }
    }
}
